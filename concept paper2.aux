\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {paragraph}{ }{1}}
\@writefile{toc}{\contentsline {paragraph}{Csp-like language is the communicating sequential of processes, itâ€™s a process for describing concurrent processes and their interaction with other compiler languages. The parallel programming language Occam is essentially an implementable sublanguage of CSP.}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Background to the Problem }{1}}
\@writefile{toc}{\contentsline {paragraph}{Most of the programming languages in the computing world have a very heavy syntax and wide grammar, lack parallelism and more so not portable. These programs run on a few clusters, servers and embedded systems.}{1}}
\@writefile{toc}{\contentsline {paragraph}{More so, they lack an extension to Occam which permits recursion and still lack virtual machines which are fully optimized for displaying a simulation, and translating the virtual machine code into native code for a real machine.}{1}}
\@writefile{toc}{\contentsline {paragraph}{Csp-like language is used for describing some interesting and complex system that are ready implemented directly and others that we cannot yet implement directly, during implementation of such interesting and complex systems we can use tools such as JCsp, c++csp,CTJ and Kroc/Occam-pi}{1}}
\@writefile{toc}{\contentsline {paragraph}{ The aims of the project is to implement an extension to Occam which permits recursion; more ambitious projects might implement a distributed implementation with several communicating copies of the virtual machine. Other possibilities are to produce separate virtual machines, optimized for displaying a simulation, or for efficiency of implementation, or translating the virtual machine code into native code for a real machine.}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Problem Statement}{2}}
\@writefile{toc}{\contentsline {paragraph}{The problem this project will address is to produce a small portable implementation of a subset of Occam, to implement a virtual machine based on the inmos transputer, and a compiler which will target the language.}{2}}
\@writefile{toc}{\contentsline {paragraph}{The proposed system will implement an extension to Occam which permits recursion and separate virtual machines which are fully optimized for displaying a simulation.}{2}}
\@writefile{toc}{\contentsline {paragraph}{The exiting compiler could not permit recursion and its difficulty to use and maintain, therefore because of that we came up with a project to implement an extension to Occam-compiler that would support and permit recursion that would produce a separate virtual machines which are optimized for displaying simulation, for efficiency of implementation and also translating the virtual machine code into native code for a real machine.}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Objectives}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Main Objective}{2}}
\@writefile{toc}{\contentsline {paragraph}{The aim of this project is to produce a small portable implementation of a subset of Occam; the proposed technique is to implement a virtual machine based on the inmos transputer, and a compiler which targets that language.}{2}}
\@writefile{toc}{\contentsline {paragraph}{To implement an extension in Occam-compiler that would permit or support recursion and also to produce a separate virtual machine which are optimized for displaying simulation ,efficiency of implementation and translating the virtual machine code into native code for real machines.}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Other Objectives}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {5}The scope }{3}}
\@writefile{toc}{\contentsline {paragraph}{The design and its implementation will only be on the Occam-compiler by creating an extension on it that will permit and support recursion and thus producing separable virtual machine that are optimized for displaying simulation, efficiency of implementation and translating the virtual machine code into native code for real machine.}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Methodology}{3}}
\@writefile{toc}{\contentsline {paragraph}{In order to implement a virtual machine based on the in mos Transputer, and a compiler which targets that language, we need to collect user requirements using various tools and techniques to achieve our objectives for example requirements analysis, interviews and literature review of existing systems.}{3}}
\@writefile{toc}{\contentsline {paragraph}{We will analyze our data collected using various methods such as process modeling specification which will include data flow diagrams and context diagrams. We will also use process specification methods during analysis of requirements for example action diagrams.}{4}}
\@writefile{toc}{\contentsline {paragraph}{We will use c-programming language to create an extension in Occam-compiler that will permit recursion.}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Outcomes/ significance}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {8}References}{4}}
